package Util;

import java.io.IOException;
import java.util.Locale;
/*
В задачах ниже речь идет о связных списках, реализовать которые необходимо
самостоятельно (можно пользоваться заготовками из примеров к лекциям). Если явно не
указано иное, подразумеваются односвязные списки.
Список должен быть реализован в виде отдельного класса (отдельный класс для списка
и отдельный – для элементов списка, последний может быть внутренним). В классе списка
присутствуют методы создания списка (конструктор, методы добавления/удаления элементов
и т.п.), перебора элементов списка, а также методы для решения непосредственно вашего
варианта данной задачи.
Решение задачи предполагает наличие оконного интерфейса для создания
первоначального списка (в том числе в виде чтения значений списка из текстового файла) и
распечатку списка после выполненных преобразований (или ответа, если по условию задачи
модифицировать список не требуется).
Если в условии задачи что-то непонятно – попросить пояснить преподавателя.


21. (*) В списке целых чисел поменять местами первый элемент, содержащий наименьшее
значение, с последним элементом, содержащим наибольшее значение. Обратите
внимание: менять значение (Value) в элементах списка запрещено, необходимо именно
переставить элементы. Допускается не более одного прохода по списку.
 */
public class Main {
    public static void main(String[] args) {
        Locale.setDefault(Locale.ROOT);
        java.awt.EventQueue.invokeLater(new Runnable(){
            public void run(){
                try {
                    new FrameMain().setVisible(true);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }
}
